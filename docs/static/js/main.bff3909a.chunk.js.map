{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACG,sBAAMC,SAZY,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOnB,SACK,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAjBpB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCVnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAMC,IAAKf,EAAKgB,IAAKN,IACrB,kCAAKA,EAAL,WCACO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,OAOTpC,mBAAS,IAPA,mBAuBtC,OAvBsC,UAStCqC,qBAAW,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEfH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIrB,CAACpB,IAKGqB,EDlBuBK,CAAa1B,GAA/Ba,EAHyB,EAG9BN,KAAYa,EAHkB,EAGlBA,QAEnB,OACI,qCACI,qBAAIJ,UAAU,sDAAd,cAAuEhB,EAAvE,OAEEoB,GAAW,mBAAGJ,UAAU,sDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aES/BgB,EAzBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,Y,MCZtC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bff3909a.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n   \r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue,...cats ] )\r\n            setInputValue('');\r\n        }\r\n      \r\n        \r\n    }\r\n\r\n    return (\r\n       <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={ handleInputChange }/>\r\n       </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=lMLYDTdW4fgCkX4zM2mNQxTYOrf1oonc`;    \r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img  src={url} alt={title} />\r\n            <p> {title} </p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category); \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__bounce animate__delay-2s\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img=> (\r\n                        <GifGridItem key={img.id} {...img}/>\r\n                    ))\r\n                }\r\n              \r\n             </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })     \r\n\r\n     const [images, setImages] = useState([])\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then(imgs => {\r\n      \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })    \r\n         \r\n        })\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid key={category} category= {category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}